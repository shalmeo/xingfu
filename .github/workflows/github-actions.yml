name: Deploy workflow
run-name: ${{ github.actor }}/${{ github.event.repository.name }} deploy pipeline
on:
  workflow_run:
    workflows: Tests workflow # Reuse the name of your tests workflow
    branches: master
    types: completed

env:
  REGISTRY: "ghcr.io/${{ github.actor }}"
  IMAGE_NAME: ${{ github.event.repository.name }}
  CONTAINER_NAME: "${{ github.event.repository.name }}-container"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Build container image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest .

      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image to Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):latest
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Create environment
        run: echo "${{ secrets.ENV }}" > .env

      - name: Copy files via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          source: "docker-compose.yml,.env"
          target: ${{ github.repository }}

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            docker-compose --file ${{ github.repository }}/docker-compose.yml pull
            docker-compose --file ${{ github.repository }}/docker-compose.yml up -d redis database
            docker-compose --file ${{ github.repository }}/docker-compose.yml run --rm api alembic upgrade head
            docker-compose --file ${{ github.repository }}/docker-compose.yml up -d api